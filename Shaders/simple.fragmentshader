#version 330 core

// Interpolated values from the vertex shaders
in vec3 fragment_color;
in vec3 fragment_normal;

uniform vec3 light_color;
uniform vec3 light_dir;

// Ouput data
out vec3 color;

void main(){

	// Ambient
	float ambient_strength = 0.1f;
	vec3 ambient = ambient_strength * light_color;

	// Diffuse 
	vec3 norm = normalize(fragment_normal);
	vec3 light_dir_norm = -normalize(light_dir);
	float diff = max(dot(norm, light_dir_norm), 0.0);
	vec3 diffuse = diff * light_color;


	// Output color = color specified in the vertex shader, 
	// interpolated between all 3 surrounding vertices
	color = (ambient + diffuse) * fragment_color;
}