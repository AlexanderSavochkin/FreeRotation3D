#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 position;
layout(location = 1) in vec3 color;
layout(location = 2) in vec3 normal;


// Output data ; will be interpolated for each fragment.
out vec3 fragment_color;
out vec3 fragment_normal;
out vec3 fragment_position;

// Values that stay constant for the whole mesh.
uniform mat4 MVP;
uniform mat4 iMt;

void main(){	

	// Output position of the vertex, in clip space : MVP * position
	gl_Position =  MVP * vec4(position,1);

	fragment_position = gl_Position.xyz;

	fragment_normal = mat3(iMt) * normal;  
	// The color of each vertex will be interpolated
	// to produce the color of each fragment
	fragment_color = color;
}